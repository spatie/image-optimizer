name: Tests

on: [push, pull_request]

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                os: [ubuntu-latest]
                php: [8.0, 7.4, 7.3, 7.2]
                dependency-version: [prefer-lowest, prefer-stable]

        name: P${{ matrix.php }} - ${{ matrix.dependency-version }} - ${{ matrix.os }}

        steps:
            -   name: Checkout code
                uses: actions/checkout@v2

            -   name: Install optimizers
                run: |
                    sudo apt-get update -y
                    sudo apt-get install -y jpegoptim pngquant gifsicle optipng libjpeg-progs webp
                    sudo npm install -g svgo

            -   name: Build Mozjpeg
                env:
                    mozjpeg_version: 4.0.0
                run: |
                    sudo apt-get update -y
                    sudo apt-get install -y build-essential nasm cmake ninja-build curl libpng-dev libpng-tools zlib1g-dev moreutils
                    curl -fLO "https://github.com/mozilla/mozjpeg/archive/v${mozjpeg_version}.tar.gz"
                    tar xf "v${mozjpeg_version}.tar.gz"
                    export CFLAGS='-pipe -flto -no-pie'
                    export LDFLAGS='-flto -no-pie -static -static-libgcc'
                    sed -E -i.bk '/^cmake_minimum_required/a\
                    unset(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS)' "mozjpeg-$mozjpeg_version"/CMakeLists.txt
                    mkdir build && cd build
                    cmake -G"Ninja" -DENABLE_SHARED=OFF -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_FIND_LIBRARY_SUFFIXES=.a -DCMAKE_LINK_SEARCH_END_STATIC=1 -DCMAKE_LINK_SEARCH_START_STATIC=1 "../mozjpeg-$mozjpeg_version/"
                    ninja
                    strip cjpeg-static
                    sudo rm -f /usr/bin/mozcjpeg
                    sudo cp cjpeg-static /usr/bin/
                    sudo mv /usr/bin/cjpeg-static /usr/bin/mozcjpeg
                    mozcjpeg -version

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
                    coverage: none

            -   name: Setup Problem Matches
                run: |
                    echo "::add-matcher::${{ runner.tool_cache }}/php.json"
                    echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            -   name: Install dependencies
                run: |
                    composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

            -   name: Execute tests
                run: vendor/bin/phpunit

